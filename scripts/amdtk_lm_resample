#!/usr/bin/env python

"""Resample a HPYP language model."""

import argparse
import pickle
import amdtk
from amdtk.models import HierarchicalPitmanYorProcess


def main():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("--resample",  action='store_true',
                        help="Activate hyperparameter resampling. This" +
                             " updates concentration and discount for" +
                             " every level of the hierarchy.")
    parser.add_argument("--tokenizer", choices=["word", "char", "phone"],
                        default="word")
    parser.add_argument("lm", help="path to the existing language model")
    parser.add_argument('text1', help="text corresponding to the current "
                                      "seating arrangement")
    parser.add_argument('text2', help="text to resample the model with")
    parser.add_argument('out', help='output model')
    args = parser.parse_args()

    if args.tokenizer == "phone":
        tokenizer = amdtk.phone_tokenize
    elif args.tokenizer == "char":
        tokenizer = amdtk.char_tokenize
    else:
        tokenizer = amdtk.word_tokenize

    # Load the language model.
    with open(args.lm, "rb") as f:
        model = pickle.load(f)

    # Prepare the texts. 
    with open(args.text1, 'r') as f:
        data_text = f.readlines()
    data1_int = amdtk.prepareText(data_text, model.vocab, tokenize=tokenizer)
    with open(args.text2, 'r') as f:
        data_text = f.readlines()
    data2_int = amdtk.prepareText(data_text, model.vocab, tokenize=tokenizer)
    
    amdtk.resampleNgramLM(model, data1_int, data2_int)
    llh = amdtk.NgramLMLogLikelihood(model, data2_int)
    print("log-likelihood:", llh)
    if(args.resample):
        model.resampleAllHyperparameters()

    with open(args.out, 'wb') as f:
        pickle.dump(model, f)

if __name__ == '__main__':
    main()
else:
    raise ImportError('this script cannot be imported')
